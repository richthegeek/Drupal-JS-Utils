An attempt to add depedencies and modularity to frontend Drupal code.

Adds the following function (backend):
 1. drupal_add_js_dependency(stack, name) - ensures a dependency is in effect before pages load to sidestep race conditions.

Adds the following function sets (frontend):
 1. init_dependency - create a dependency stack, optionally making it resolve after page load. May switch to a timeout in future.
 2. add_dependency - adds a dependency to a dependency stack, which must be marked as resolved before the stack marks as resolved.
 3. resolve_dependency - resolves a named dependency on all stacks.
 4. dependency_status - checks the status of a dependency stack
 
 5. attach - adds a module to the list of possible hook-implementors
 6. implements - lists modules that implement the named hook
 7. invoke - invokes a hook on a specific module
 8. invoke_all - invokes a hook on all modules that implement it.
 9. alter - invokes a hook_alter on all modules that implement it.
 10. Creates the "Drupal.modules" object with the above methods listed on it.

This is in use in a real-world situation, although it may function differently to the PHP versions of the same functions due to language differences and mistakes.
